function main() {
    // answer 3,2,1
    var s = "())()()(())((()(()()(((()))((((())((()(())()())(()((" +
    "((()))()(()))(())()(())(()(((((())((((((()())())(()(()((())()))(" +
    "()))))))()(()))((((())()()()))()()()(((()(()())(()()(()(()()(((()))))" +
    "))()()))())())((()()))))))((()))(((()((())()(()()))((())))()()())))))))()))))(()))))()))()))()((())))" +
    "((()))(()))))))(((()))))))))()(()()()(())((())()))()()(())))()()))(()())()))(((()())()))((())((((()))(" +
    "()(()(()()()(((())()(((((()))((()(((((())(()()))((((((((()(()(()(()(())))(())(()())())(()((((()(()" +
    ")((()(())))(())))()(((((()(()()(())))))))())(())(())(()()(((())))((()))(((((()))))())))()((()))()))))" +
    "())))))((())(((((()()))((((())))(((()(()(())())(((()(()(()()()())))())()))((()((())())()()()(((())(((" +
    "((()((((((()((()())))((((())((()(((((((()(()((()()()(()(()())(()(()()((((())))()(((()())))(()()))()((" +
    ")()()()(((((())(()))))((()))())))()((((((()))())))()(()))(())))((((()())(((((()()())(((((())(()())((" +
    ")))))()(()()))()))))))())))(((())(()(()()))(()))()(((())))())((((()(((()))))))()(()(()))()()(()()))))" +
    "))))((()))))))(())((()((()))()))((((((()())))))(()((())((((()))))(()(()()()()(()))()()(()(()))(()()(((" +
    "((((()())(())(()())((())())()(()())((())()())())(()())))())))(())())())(())((()())(((()()))()))()()))(" +
    ")(()(())((((((((())))()((())((()((((((((((()))))(()(((((())(()(()())())))((())())))))()))(()((()()))((" +
    "()((())()()()((()(())())((())())(()()(((())))))())()()(()))()())(()(()((())))((((()()(())))())(())(()(" +
    "()(())())())(()()())()(())())))(()()(((())))((()()(((())()()(()())((((()()(()())(()((((()(()()(()(()((" +
    "(()((()())(()()))(()((((()(((((()))))()()))(((()((((((()(()()()()())()))(()(())))))((()(((()())())))" +
    "(((()()))(()(()(((((((()()))(()(())))())()(())())(())(()))(())(()))()()(()()())))))()))()((())(((()(" +
    "(((((((())()()))())))((()())(";
    const i = longestValidParentheses(s);


    console.log(i)



}

var longestValidParentheses = function(s) {
    var result = 0;

    var stack = [];

    stack.unshift(-1);

    for (i = 0; i < s.length;i++) {
        if (s.charAt(i) == '(') {
            stack.unshift(i);
        } else {
            if (stack.length > 0) {
                const prev = stack.shift();
                if (stack.length > 0) {
                    result = Math.max(result, i - stack[0]);
                } else {
                    stack.unshift(i)
                }
            }
        }
    }

    return result;
};

main()